{"version":3,"sources":["logo.svg","components/AppDescription.js","components/HomeView.js","components/AboutView.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","AppDescription","this","props","text","Component","HomeView","AboutView","href","App","className","src","logo","alt","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,kC,+MCc5BC,G,6KANP,OACI,6BAAMC,KAAKC,MAAMC,U,GAHAC,c,eCSbC,E,uKAZb,OACC,6BACC,+CACA,+DACA,gG,GANmBD,aCwBRE,E,uKAtBb,OACC,6BACC,kDACA,qHAIA,8HAEuC,uCAFvC,aAGS,uDAHT,0EAKC,6CALD,+BAOA,kFAEC,uBAAGC,KAAK,6CAAR,oBAFD,U,GAhBoBH,aCyBTI,E,uKAjBd,OACE,yBAAKC,UAAU,OAChB,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,wBAAIH,UAAU,aAAd,sBAEF,kBAAC,EAAD,CAAgBN,KAAK,kDACrB,kBAAC,IAAD,KACE,6BACD,kBAAC,IAAD,CAAOU,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,kBAAC,IAAD,CAAOQ,OAAK,EAACC,KAAK,SAASC,UAAWT,W,GAZvBF,aCKCY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.dcf453d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\n//un testo non racchiuso trea tag genera errore\n//Benvenuto nella mia prima applicazione React!\n//<div>Benvenuto nella mia prima applicazione React!</div>\n\nclass AppDescription extends Component {\n    render() {\n        return (\n            <div>{this.props.text}</div>\n        );\n    }\n}\n\nexport default AppDescription;\n","import React, { Component } from 'react';\n\tclass HomeView extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Pagina iniziale</h1>\n\t\t\t\t\t<p>Benvenuto nella pagina iniziale.</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tFai clic sul menu per selezionare la\n\t\t\t\t\t\tpagina da visualizzare.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\texport default HomeView;\n\n","import React, { Component } from 'react';\n\tclass AboutView extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<h1>Informazioni su...</h1>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tQuesta pagina contiene informazioni generiche\n\t\t\t\t\t\tsulla applicazione che stai utilizzando.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tIl progetto è stato realizzato con React, una libreria\n\t\t\t\t\t\tideata da Facebook per lo sviluppo di <strong>SPA</strong>,\n\t\t\t\t\t\tovvero (<em>Single Page Application</em>), dinamiche e\n\t\t\t\t\t\tperformanti, che possono essere all'occorrenza diventare\n\t\t\t\t\t\t<strong>multiview</strong> e supportare più viste.\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tScopri tutte le funzionalità di React leggendo la\n\t\t\t\t\t\t<a href=\"https://www.html.it/guide/react-la-guida/\">guida di HTML.it</a>.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\texport default AboutView;","import React, { Component } from \"react\";\n\timport logo from \"./logo.svg\";\n\timport \"./App.css\";\n\timport AppDescription from \"./components/AppDescription.js\";\n\timport { BrowserRouter, Route } from \"react-router-dom\";\n\timport HomeView from \"./components/HomeView.js\";\n\timport AboutView from \"./components/AboutView.js\";\n\tclass App extends Component {\n\t  render() {\n\t\treturn (\n\t\t  <div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t  <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t  <h1 className=\"App-title\">Welcome to React!</h1>\n\t\t\t</header>\n\t\t\t<AppDescription text=\"Benvenuto nella mia prima applicazione React!\" />\n\t\t\t<BrowserRouter>\n\t\t\t  <div>\n\t\t\t\t<Route exact path=\"/\" component={HomeView}/>\n\t\t\t\t<Route exact path=\"/about\" component={AboutView}/>\n\t\t\t  </div>\n\t\t\t</BrowserRouter>\n\t\t  </div>\n\t\t);\n\t  }\n\t}\n\texport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}